// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: DataManager.proto

package criticalmanufacturing_grpc_datasource

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetMetricAggregateRequest_Aggregation_AggregationType int32

const (
	GetMetricAggregateRequest_Aggregation_SUM           GetMetricAggregateRequest_Aggregation_AggregationType = 0
	GetMetricAggregateRequest_Aggregation_AVG           GetMetricAggregateRequest_Aggregation_AggregationType = 1
	GetMetricAggregateRequest_Aggregation_RATIO_OF_SUMS GetMetricAggregateRequest_Aggregation_AggregationType = 2
	GetMetricAggregateRequest_Aggregation_COUNT         GetMetricAggregateRequest_Aggregation_AggregationType = 3
)

// Enum value maps for GetMetricAggregateRequest_Aggregation_AggregationType.
var (
	GetMetricAggregateRequest_Aggregation_AggregationType_name = map[int32]string{
		0: "SUM",
		1: "AVG",
		2: "RATIO_OF_SUMS",
		3: "COUNT",
	}
	GetMetricAggregateRequest_Aggregation_AggregationType_value = map[string]int32{
		"SUM":           0,
		"AVG":           1,
		"RATIO_OF_SUMS": 2,
		"COUNT":         3,
	}
)

func (x GetMetricAggregateRequest_Aggregation_AggregationType) Enum() *GetMetricAggregateRequest_Aggregation_AggregationType {
	p := new(GetMetricAggregateRequest_Aggregation_AggregationType)
	*p = x
	return p
}

func (x GetMetricAggregateRequest_Aggregation_AggregationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetMetricAggregateRequest_Aggregation_AggregationType) Descriptor() protoreflect.EnumDescriptor {
	return file_DataManager_proto_enumTypes[0].Descriptor()
}

func (GetMetricAggregateRequest_Aggregation_AggregationType) Type() protoreflect.EnumType {
	return &file_DataManager_proto_enumTypes[0]
}

func (x GetMetricAggregateRequest_Aggregation_AggregationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetMetricAggregateRequest_Aggregation_AggregationType.Descriptor instead.
func (GetMetricAggregateRequest_Aggregation_AggregationType) EnumDescriptor() ([]byte, []int) {
	return file_DataManager_proto_rawDescGZIP(), []int{14, 0, 0}
}

type Frame_Field_FieldType int32

const (
	Frame_Field_BOOLEAN Frame_Field_FieldType = 0
	Frame_Field_GEO     Frame_Field_FieldType = 1
	Frame_Field_NUMBER  Frame_Field_FieldType = 2
	Frame_Field_OTHER   Frame_Field_FieldType = 3
	Frame_Field_STRING  Frame_Field_FieldType = 4
	Frame_Field_TIME    Frame_Field_FieldType = 5
	Frame_Field_TRACE   Frame_Field_FieldType = 6
)

// Enum value maps for Frame_Field_FieldType.
var (
	Frame_Field_FieldType_name = map[int32]string{
		0: "BOOLEAN",
		1: "GEO",
		2: "NUMBER",
		3: "OTHER",
		4: "STRING",
		5: "TIME",
		6: "TRACE",
	}
	Frame_Field_FieldType_value = map[string]int32{
		"BOOLEAN": 0,
		"GEO":     1,
		"NUMBER":  2,
		"OTHER":   3,
		"STRING":  4,
		"TIME":    5,
		"TRACE":   6,
	}
)

func (x Frame_Field_FieldType) Enum() *Frame_Field_FieldType {
	p := new(Frame_Field_FieldType)
	*p = x
	return p
}

func (x Frame_Field_FieldType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Frame_Field_FieldType) Descriptor() protoreflect.EnumDescriptor {
	return file_DataManager_proto_enumTypes[1].Descriptor()
}

func (Frame_Field_FieldType) Type() protoreflect.EnumType {
	return &file_DataManager_proto_enumTypes[1]
}

func (x Frame_Field_FieldType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Frame_Field_FieldType.Descriptor instead.
func (Frame_Field_FieldType) EnumDescriptor() ([]byte, []int) {
	return file_DataManager_proto_rawDescGZIP(), []int{18, 0, 0}
}

type OrderBy_OrderByExpression int32

const (
	OrderBy_ASC  OrderBy_OrderByExpression = 0
	OrderBy_DESC OrderBy_OrderByExpression = 1
)

// Enum value maps for OrderBy_OrderByExpression.
var (
	OrderBy_OrderByExpression_name = map[int32]string{
		0: "ASC",
		1: "DESC",
	}
	OrderBy_OrderByExpression_value = map[string]int32{
		"ASC":  0,
		"DESC": 1,
	}
)

func (x OrderBy_OrderByExpression) Enum() *OrderBy_OrderByExpression {
	p := new(OrderBy_OrderByExpression)
	*p = x
	return p
}

func (x OrderBy_OrderByExpression) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderBy_OrderByExpression) Descriptor() protoreflect.EnumDescriptor {
	return file_DataManager_proto_enumTypes[2].Descriptor()
}

func (OrderBy_OrderByExpression) Type() protoreflect.EnumType {
	return &file_DataManager_proto_enumTypes[2]
}

func (x OrderBy_OrderByExpression) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderBy_OrderByExpression.Descriptor instead.
func (OrderBy_OrderByExpression) EnumDescriptor() ([]byte, []int) {
	return file_DataManager_proto_rawDescGZIP(), []int{21, 0}
}

// List Datasets
type ListDatasetsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListDatasetsRequest) Reset() {
	*x = ListDatasetsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DataManager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDatasetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDatasetsRequest) ProtoMessage() {}

func (x *ListDatasetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DataManager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDatasetsRequest.ProtoReflect.Descriptor instead.
func (*ListDatasetsRequest) Descriptor() ([]byte, []int) {
	return file_DataManager_proto_rawDescGZIP(), []int{0}
}

type ListDatasetsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Datasets []*ListDatasetsResponse_Dataset `protobuf:"bytes,1,rep,name=datasets,proto3" json:"datasets,omitempty"`
}

func (x *ListDatasetsResponse) Reset() {
	*x = ListDatasetsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DataManager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDatasetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDatasetsResponse) ProtoMessage() {}

func (x *ListDatasetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_DataManager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDatasetsResponse.ProtoReflect.Descriptor instead.
func (*ListDatasetsResponse) Descriptor() ([]byte, []int) {
	return file_DataManager_proto_rawDescGZIP(), []int{1}
}

func (x *ListDatasetsResponse) GetDatasets() []*ListDatasetsResponse_Dataset {
	if x != nil {
		return x.Datasets
	}
	return nil
}

// List Metrics
type ListMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dataset string `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
}

func (x *ListMetricsRequest) Reset() {
	*x = ListMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DataManager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMetricsRequest) ProtoMessage() {}

func (x *ListMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DataManager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMetricsRequest.ProtoReflect.Descriptor instead.
func (*ListMetricsRequest) Descriptor() ([]byte, []int) {
	return file_DataManager_proto_rawDescGZIP(), []int{2}
}

func (x *ListMetricsRequest) GetDataset() string {
	if x != nil {
		return x.Dataset
	}
	return ""
}

type ListMetricsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metrics []*ListMetricsResponse_Metric `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"`
}

func (x *ListMetricsResponse) Reset() {
	*x = ListMetricsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DataManager_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMetricsResponse) ProtoMessage() {}

func (x *ListMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_DataManager_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMetricsResponse.ProtoReflect.Descriptor instead.
func (*ListMetricsResponse) Descriptor() ([]byte, []int) {
	return file_DataManager_proto_rawDescGZIP(), []int{3}
}

func (x *ListMetricsResponse) GetMetrics() []*ListMetricsResponse_Metric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

// List Dimension Keys
type ListDimensionKeysRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dataset string `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
}

func (x *ListDimensionKeysRequest) Reset() {
	*x = ListDimensionKeysRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DataManager_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDimensionKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDimensionKeysRequest) ProtoMessage() {}

func (x *ListDimensionKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DataManager_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDimensionKeysRequest.ProtoReflect.Descriptor instead.
func (*ListDimensionKeysRequest) Descriptor() ([]byte, []int) {
	return file_DataManager_proto_rawDescGZIP(), []int{4}
}

func (x *ListDimensionKeysRequest) GetDataset() string {
	if x != nil {
		return x.Dataset
	}
	return ""
}

type ListDimensionKeysResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DimensionKeys []*ListDimensionKeysResponse_DimensionKey `protobuf:"bytes,1,rep,name=dimension_keys,json=dimensionKeys,proto3" json:"dimension_keys,omitempty"`
}

func (x *ListDimensionKeysResponse) Reset() {
	*x = ListDimensionKeysResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DataManager_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDimensionKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDimensionKeysResponse) ProtoMessage() {}

func (x *ListDimensionKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_DataManager_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDimensionKeysResponse.ProtoReflect.Descriptor instead.
func (*ListDimensionKeysResponse) Descriptor() ([]byte, []int) {
	return file_DataManager_proto_rawDescGZIP(), []int{5}
}

func (x *ListDimensionKeysResponse) GetDimensionKeys() []*ListDimensionKeysResponse_DimensionKey {
	if x != nil {
		return x.DimensionKeys
	}
	return nil
}

// List Dimension Values (For Grafana)
type ListDimensionValuesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dataset      string `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
	DimensionKey string `protobuf:"bytes,2,opt,name=dimension_key,json=dimensionKey,proto3" json:"dimension_key,omitempty"`
	Filter       string `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *ListDimensionValuesRequest) Reset() {
	*x = ListDimensionValuesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DataManager_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDimensionValuesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDimensionValuesRequest) ProtoMessage() {}

func (x *ListDimensionValuesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DataManager_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDimensionValuesRequest.ProtoReflect.Descriptor instead.
func (*ListDimensionValuesRequest) Descriptor() ([]byte, []int) {
	return file_DataManager_proto_rawDescGZIP(), []int{6}
}

func (x *ListDimensionValuesRequest) GetDataset() string {
	if x != nil {
		return x.Dataset
	}
	return ""
}

func (x *ListDimensionValuesRequest) GetDimensionKey() string {
	if x != nil {
		return x.DimensionKey
	}
	return ""
}

func (x *ListDimensionValuesRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type ListDimensionValuesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DimensionValues []*ListDimensionValuesResponse_DimensionValue `protobuf:"bytes,1,rep,name=dimension_values,json=dimensionValues,proto3" json:"dimension_values,omitempty"`
}

func (x *ListDimensionValuesResponse) Reset() {
	*x = ListDimensionValuesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DataManager_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDimensionValuesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDimensionValuesResponse) ProtoMessage() {}

func (x *ListDimensionValuesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_DataManager_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDimensionValuesResponse.ProtoReflect.Descriptor instead.
func (*ListDimensionValuesResponse) Descriptor() ([]byte, []int) {
	return file_DataManager_proto_rawDescGZIP(), []int{7}
}

func (x *ListDimensionValuesResponse) GetDimensionValues() []*ListDimensionValuesResponse_DimensionValue {
	if x != nil {
		return x.DimensionValues
	}
	return nil
}

// List Dimensions Values (For MES)
type ListDimensionsValuesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dataset       string   `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
	DimensionKeys []string `protobuf:"bytes,2,rep,name=dimension_keys,json=dimensionKeys,proto3" json:"dimension_keys,omitempty"`
	Filter        string   `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *ListDimensionsValuesRequest) Reset() {
	*x = ListDimensionsValuesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DataManager_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDimensionsValuesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDimensionsValuesRequest) ProtoMessage() {}

func (x *ListDimensionsValuesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DataManager_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDimensionsValuesRequest.ProtoReflect.Descriptor instead.
func (*ListDimensionsValuesRequest) Descriptor() ([]byte, []int) {
	return file_DataManager_proto_rawDescGZIP(), []int{8}
}

func (x *ListDimensionsValuesRequest) GetDataset() string {
	if x != nil {
		return x.Dataset
	}
	return ""
}

func (x *ListDimensionsValuesRequest) GetDimensionKeys() []string {
	if x != nil {
		return x.DimensionKeys
	}
	return nil
}

func (x *ListDimensionsValuesRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type ListDimensionsValuesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DimensionValues []*ListDimensionsValuesResponse_DimensionValue `protobuf:"bytes,1,rep,name=dimension_values,json=dimensionValues,proto3" json:"dimension_values,omitempty"`
}

func (x *ListDimensionsValuesResponse) Reset() {
	*x = ListDimensionsValuesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DataManager_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDimensionsValuesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDimensionsValuesResponse) ProtoMessage() {}

func (x *ListDimensionsValuesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_DataManager_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDimensionsValuesResponse.ProtoReflect.Descriptor instead.
func (*ListDimensionsValuesResponse) Descriptor() ([]byte, []int) {
	return file_DataManager_proto_rawDescGZIP(), []int{9}
}

func (x *ListDimensionsValuesResponse) GetDimensionValues() []*ListDimensionsValuesResponse_DimensionValue {
	if x != nil {
		return x.DimensionValues
	}
	return nil
}

// Get Metric History
type GetMetricHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dataset      string                 `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
	Metrics      []string               `protobuf:"bytes,2,rep,name=metrics,proto3" json:"metrics,omitempty"`
	Dimensions   []*Dimension           `protobuf:"bytes,3,rep,name=dimensions,proto3" json:"dimensions,omitempty"`
	StartDate    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	MaxItems     int32                  `protobuf:"varint,6,opt,name=max_items,json=maxItems,proto3" json:"max_items,omitempty"`
	DisplayNames []*DisplayName         `protobuf:"bytes,7,rep,name=display_names,json=displayNames,proto3" json:"display_names,omitempty"`
}

func (x *GetMetricHistoryRequest) Reset() {
	*x = GetMetricHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DataManager_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMetricHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricHistoryRequest) ProtoMessage() {}

func (x *GetMetricHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DataManager_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetMetricHistoryRequest) Descriptor() ([]byte, []int) {
	return file_DataManager_proto_rawDescGZIP(), []int{10}
}

func (x *GetMetricHistoryRequest) GetDataset() string {
	if x != nil {
		return x.Dataset
	}
	return ""
}

func (x *GetMetricHistoryRequest) GetMetrics() []string {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *GetMetricHistoryRequest) GetDimensions() []*Dimension {
	if x != nil {
		return x.Dimensions
	}
	return nil
}

func (x *GetMetricHistoryRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *GetMetricHistoryRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *GetMetricHistoryRequest) GetMaxItems() int32 {
	if x != nil {
		return x.MaxItems
	}
	return 0
}

func (x *GetMetricHistoryRequest) GetDisplayNames() []*DisplayName {
	if x != nil {
		return x.DisplayNames
	}
	return nil
}

type GetMetricHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frames []*Frame `protobuf:"bytes,1,rep,name=frames,proto3" json:"frames,omitempty"`
}

func (x *GetMetricHistoryResponse) Reset() {
	*x = GetMetricHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DataManager_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMetricHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricHistoryResponse) ProtoMessage() {}

func (x *GetMetricHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_DataManager_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetMetricHistoryResponse) Descriptor() ([]byte, []int) {
	return file_DataManager_proto_rawDescGZIP(), []int{11}
}

func (x *GetMetricHistoryResponse) GetFrames() []*Frame {
	if x != nil {
		return x.Frames
	}
	return nil
}

// Get Metric Value
type GetMetricValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dataset      string         `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
	Metrics      []string       `protobuf:"bytes,2,rep,name=metrics,proto3" json:"metrics,omitempty"`
	Dimensions   []*Dimension   `protobuf:"bytes,3,rep,name=dimensions,proto3" json:"dimensions,omitempty"`
	DisplayNames []*DisplayName `protobuf:"bytes,4,rep,name=display_names,json=displayNames,proto3" json:"display_names,omitempty"`
}

func (x *GetMetricValueRequest) Reset() {
	*x = GetMetricValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DataManager_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMetricValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricValueRequest) ProtoMessage() {}

func (x *GetMetricValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DataManager_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricValueRequest.ProtoReflect.Descriptor instead.
func (*GetMetricValueRequest) Descriptor() ([]byte, []int) {
	return file_DataManager_proto_rawDescGZIP(), []int{12}
}

func (x *GetMetricValueRequest) GetDataset() string {
	if x != nil {
		return x.Dataset
	}
	return ""
}

func (x *GetMetricValueRequest) GetMetrics() []string {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *GetMetricValueRequest) GetDimensions() []*Dimension {
	if x != nil {
		return x.Dimensions
	}
	return nil
}

func (x *GetMetricValueRequest) GetDisplayNames() []*DisplayName {
	if x != nil {
		return x.DisplayNames
	}
	return nil
}

type GetMetricValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frames []*Frame `protobuf:"bytes,1,rep,name=frames,proto3" json:"frames,omitempty"`
}

func (x *GetMetricValueResponse) Reset() {
	*x = GetMetricValueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DataManager_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMetricValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricValueResponse) ProtoMessage() {}

func (x *GetMetricValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_DataManager_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricValueResponse.ProtoReflect.Descriptor instead.
func (*GetMetricValueResponse) Descriptor() ([]byte, []int) {
	return file_DataManager_proto_rawDescGZIP(), []int{13}
}

func (x *GetMetricValueResponse) GetFrames() []*Frame {
	if x != nil {
		return x.Frames
	}
	return nil
}

// Get Metric Aggregate
type GetMetricAggregateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dataset      string                                   `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
	Metrics      []string                                 `protobuf:"bytes,2,rep,name=metrics,proto3" json:"metrics,omitempty"`
	Dimensions   []*Dimension                             `protobuf:"bytes,3,rep,name=dimensions,proto3" json:"dimensions,omitempty"`
	StartDate    *timestamppb.Timestamp                   `protobuf:"bytes,4,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate      *timestamppb.Timestamp                   `protobuf:"bytes,5,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	MaxItems     int32                                    `protobuf:"varint,6,opt,name=max_items,json=maxItems,proto3" json:"max_items,omitempty"`
	OrderBy      []*OrderBy                               `protobuf:"bytes,7,rep,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	Aggregations []*GetMetricAggregateRequest_Aggregation `protobuf:"bytes,8,rep,name=aggregations,proto3" json:"aggregations,omitempty"`
	DisplayNames []*DisplayName                           `protobuf:"bytes,9,rep,name=display_names,json=displayNames,proto3" json:"display_names,omitempty"`
}

func (x *GetMetricAggregateRequest) Reset() {
	*x = GetMetricAggregateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DataManager_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMetricAggregateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricAggregateRequest) ProtoMessage() {}

func (x *GetMetricAggregateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DataManager_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricAggregateRequest.ProtoReflect.Descriptor instead.
func (*GetMetricAggregateRequest) Descriptor() ([]byte, []int) {
	return file_DataManager_proto_rawDescGZIP(), []int{14}
}

func (x *GetMetricAggregateRequest) GetDataset() string {
	if x != nil {
		return x.Dataset
	}
	return ""
}

func (x *GetMetricAggregateRequest) GetMetrics() []string {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *GetMetricAggregateRequest) GetDimensions() []*Dimension {
	if x != nil {
		return x.Dimensions
	}
	return nil
}

func (x *GetMetricAggregateRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *GetMetricAggregateRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *GetMetricAggregateRequest) GetMaxItems() int32 {
	if x != nil {
		return x.MaxItems
	}
	return 0
}

func (x *GetMetricAggregateRequest) GetOrderBy() []*OrderBy {
	if x != nil {
		return x.OrderBy
	}
	return nil
}

func (x *GetMetricAggregateRequest) GetAggregations() []*GetMetricAggregateRequest_Aggregation {
	if x != nil {
		return x.Aggregations
	}
	return nil
}

func (x *GetMetricAggregateRequest) GetDisplayNames() []*DisplayName {
	if x != nil {
		return x.DisplayNames
	}
	return nil
}

type GetMetricAggregateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frames []*Frame `protobuf:"bytes,1,rep,name=frames,proto3" json:"frames,omitempty"`
}

func (x *GetMetricAggregateResponse) Reset() {
	*x = GetMetricAggregateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DataManager_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMetricAggregateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricAggregateResponse) ProtoMessage() {}

func (x *GetMetricAggregateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_DataManager_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricAggregateResponse.ProtoReflect.Descriptor instead.
func (*GetMetricAggregateResponse) Descriptor() ([]byte, []int) {
	return file_DataManager_proto_rawDescGZIP(), []int{15}
}

func (x *GetMetricAggregateResponse) GetFrames() []*Frame {
	if x != nil {
		return x.Frames
	}
	return nil
}

// Get Metric Table
type GetMetricTableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dataset      string         `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
	Metrics      []string       `protobuf:"bytes,2,rep,name=metrics,proto3" json:"metrics,omitempty"`
	Dimensions   []*Dimension   `protobuf:"bytes,3,rep,name=dimensions,proto3" json:"dimensions,omitempty"`
	OrderBy      []*OrderBy     `protobuf:"bytes,4,rep,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	DisplayNames []*DisplayName `protobuf:"bytes,5,rep,name=display_names,json=displayNames,proto3" json:"display_names,omitempty"`
	PageSize     int32          `protobuf:"varint,6,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken    string         `protobuf:"bytes,7,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *GetMetricTableRequest) Reset() {
	*x = GetMetricTableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DataManager_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMetricTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricTableRequest) ProtoMessage() {}

func (x *GetMetricTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_DataManager_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricTableRequest.ProtoReflect.Descriptor instead.
func (*GetMetricTableRequest) Descriptor() ([]byte, []int) {
	return file_DataManager_proto_rawDescGZIP(), []int{16}
}

func (x *GetMetricTableRequest) GetDataset() string {
	if x != nil {
		return x.Dataset
	}
	return ""
}

func (x *GetMetricTableRequest) GetMetrics() []string {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *GetMetricTableRequest) GetDimensions() []*Dimension {
	if x != nil {
		return x.Dimensions
	}
	return nil
}

func (x *GetMetricTableRequest) GetOrderBy() []*OrderBy {
	if x != nil {
		return x.OrderBy
	}
	return nil
}

func (x *GetMetricTableRequest) GetDisplayNames() []*DisplayName {
	if x != nil {
		return x.DisplayNames
	}
	return nil
}

func (x *GetMetricTableRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetMetricTableRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type GetMetricTableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frames        []*Frame `protobuf:"bytes,1,rep,name=frames,proto3" json:"frames,omitempty"`
	NextPageToken string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalSize     int32    `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
}

func (x *GetMetricTableResponse) Reset() {
	*x = GetMetricTableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DataManager_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMetricTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricTableResponse) ProtoMessage() {}

func (x *GetMetricTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_DataManager_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricTableResponse.ProtoReflect.Descriptor instead.
func (*GetMetricTableResponse) Descriptor() ([]byte, []int) {
	return file_DataManager_proto_rawDescGZIP(), []int{17}
}

func (x *GetMetricTableResponse) GetFrames() []*Frame {
	if x != nil {
		return x.Frames
	}
	return nil
}

func (x *GetMetricTableResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *GetMetricTableResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

// The data frame for every metric
type Frame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields     []*Frame_Field           `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	Timestamps []*timestamppb.Timestamp `protobuf:"bytes,2,rep,name=timestamps,proto3" json:"timestamps,omitempty"`
}

func (x *Frame) Reset() {
	*x = Frame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DataManager_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Frame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Frame) ProtoMessage() {}

func (x *Frame) ProtoReflect() protoreflect.Message {
	mi := &file_DataManager_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Frame.ProtoReflect.Descriptor instead.
func (*Frame) Descriptor() ([]byte, []int) {
	return file_DataManager_proto_rawDescGZIP(), []int{18}
}

func (x *Frame) GetFields() []*Frame_Field {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *Frame) GetTimestamps() []*timestamppb.Timestamp {
	if x != nil {
		return x.Timestamps
	}
	return nil
}

// Dimension
type Dimension struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value    []string `protobuf:"bytes,2,rep,name=value,proto3" json:"value,omitempty"`
	Operator string   `protobuf:"bytes,3,opt,name=operator,proto3" json:"operator,omitempty"`
}

func (x *Dimension) Reset() {
	*x = Dimension{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DataManager_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dimension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dimension) ProtoMessage() {}

func (x *Dimension) ProtoReflect() protoreflect.Message {
	mi := &file_DataManager_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dimension.ProtoReflect.Descriptor instead.
func (*Dimension) Descriptor() ([]byte, []int) {
	return file_DataManager_proto_rawDescGZIP(), []int{19}
}

func (x *Dimension) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Dimension) GetValue() []string {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Dimension) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

// Display Name
type DisplayName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *DisplayName) Reset() {
	*x = DisplayName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DataManager_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisplayName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayName) ProtoMessage() {}

func (x *DisplayName) ProtoReflect() protoreflect.Message {
	mi := &file_DataManager_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayName.ProtoReflect.Descriptor instead.
func (*DisplayName) Descriptor() ([]byte, []int) {
	return file_DataManager_proto_rawDescGZIP(), []int{20}
}

func (x *DisplayName) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *DisplayName) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// Order By
type OrderBy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field      string                    `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Expression OrderBy_OrderByExpression `protobuf:"varint,2,opt,name=expression,proto3,enum=Cmf.DataManager.OrderBy_OrderByExpression" json:"expression,omitempty"`
}

func (x *OrderBy) Reset() {
	*x = OrderBy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DataManager_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderBy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderBy) ProtoMessage() {}

func (x *OrderBy) ProtoReflect() protoreflect.Message {
	mi := &file_DataManager_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderBy.ProtoReflect.Descriptor instead.
func (*OrderBy) Descriptor() ([]byte, []int) {
	return file_DataManager_proto_rawDescGZIP(), []int{21}
}

func (x *OrderBy) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *OrderBy) GetExpression() OrderBy_OrderByExpression {
	if x != nil {
		return x.Expression
	}
	return OrderBy_ASC
}

type ListDatasetsResponse_Dataset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *ListDatasetsResponse_Dataset) Reset() {
	*x = ListDatasetsResponse_Dataset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DataManager_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDatasetsResponse_Dataset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDatasetsResponse_Dataset) ProtoMessage() {}

func (x *ListDatasetsResponse_Dataset) ProtoReflect() protoreflect.Message {
	mi := &file_DataManager_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDatasetsResponse_Dataset.ProtoReflect.Descriptor instead.
func (*ListDatasetsResponse_Dataset) Descriptor() ([]byte, []int) {
	return file_DataManager_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ListDatasetsResponse_Dataset) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListDatasetsResponse_Dataset) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ListMetricsResponse_Metric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *ListMetricsResponse_Metric) Reset() {
	*x = ListMetricsResponse_Metric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DataManager_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMetricsResponse_Metric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMetricsResponse_Metric) ProtoMessage() {}

func (x *ListMetricsResponse_Metric) ProtoReflect() protoreflect.Message {
	mi := &file_DataManager_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMetricsResponse_Metric.ProtoReflect.Descriptor instead.
func (*ListMetricsResponse_Metric) Descriptor() ([]byte, []int) {
	return file_DataManager_proto_rawDescGZIP(), []int{3, 0}
}

func (x *ListMetricsResponse_Metric) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListMetricsResponse_Metric) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ListDimensionKeysResponse_DimensionKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key         string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *ListDimensionKeysResponse_DimensionKey) Reset() {
	*x = ListDimensionKeysResponse_DimensionKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DataManager_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDimensionKeysResponse_DimensionKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDimensionKeysResponse_DimensionKey) ProtoMessage() {}

func (x *ListDimensionKeysResponse_DimensionKey) ProtoReflect() protoreflect.Message {
	mi := &file_DataManager_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDimensionKeysResponse_DimensionKey.ProtoReflect.Descriptor instead.
func (*ListDimensionKeysResponse_DimensionKey) Descriptor() ([]byte, []int) {
	return file_DataManager_proto_rawDescGZIP(), []int{5, 0}
}

func (x *ListDimensionKeysResponse_DimensionKey) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ListDimensionKeysResponse_DimensionKey) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ListDimensionValuesResponse_DimensionValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value       string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *ListDimensionValuesResponse_DimensionValue) Reset() {
	*x = ListDimensionValuesResponse_DimensionValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DataManager_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDimensionValuesResponse_DimensionValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDimensionValuesResponse_DimensionValue) ProtoMessage() {}

func (x *ListDimensionValuesResponse_DimensionValue) ProtoReflect() protoreflect.Message {
	mi := &file_DataManager_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDimensionValuesResponse_DimensionValue.ProtoReflect.Descriptor instead.
func (*ListDimensionValuesResponse_DimensionValue) Descriptor() ([]byte, []int) {
	return file_DataManager_proto_rawDescGZIP(), []int{7, 0}
}

func (x *ListDimensionValuesResponse_DimensionValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ListDimensionValuesResponse_DimensionValue) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ListDimensionsValuesResponse_DimensionValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Values []string `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *ListDimensionsValuesResponse_DimensionValue) Reset() {
	*x = ListDimensionsValuesResponse_DimensionValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DataManager_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDimensionsValuesResponse_DimensionValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDimensionsValuesResponse_DimensionValue) ProtoMessage() {}

func (x *ListDimensionsValuesResponse_DimensionValue) ProtoReflect() protoreflect.Message {
	mi := &file_DataManager_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDimensionsValuesResponse_DimensionValue.ProtoReflect.Descriptor instead.
func (*ListDimensionsValuesResponse_DimensionValue) Descriptor() ([]byte, []int) {
	return file_DataManager_proto_rawDescGZIP(), []int{9, 0}
}

func (x *ListDimensionsValuesResponse_DimensionValue) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ListDimensionsValuesResponse_DimensionValue) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type GetMetricAggregateRequest_Aggregation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AggregationType  GetMetricAggregateRequest_Aggregation_AggregationType `protobuf:"varint,1,opt,name=aggregation_type,json=aggregationType,proto3,enum=Cmf.DataManager.GetMetricAggregateRequest_Aggregation_AggregationType" json:"aggregation_type,omitempty"`
	AggregatedFields []string                                              `protobuf:"bytes,2,rep,name=aggregated_fields,json=aggregatedFields,proto3" json:"aggregated_fields,omitempty"`
	Alias            string                                                `protobuf:"bytes,3,opt,name=alias,proto3" json:"alias,omitempty"`
}

func (x *GetMetricAggregateRequest_Aggregation) Reset() {
	*x = GetMetricAggregateRequest_Aggregation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DataManager_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMetricAggregateRequest_Aggregation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricAggregateRequest_Aggregation) ProtoMessage() {}

func (x *GetMetricAggregateRequest_Aggregation) ProtoReflect() protoreflect.Message {
	mi := &file_DataManager_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricAggregateRequest_Aggregation.ProtoReflect.Descriptor instead.
func (*GetMetricAggregateRequest_Aggregation) Descriptor() ([]byte, []int) {
	return file_DataManager_proto_rawDescGZIP(), []int{14, 0}
}

func (x *GetMetricAggregateRequest_Aggregation) GetAggregationType() GetMetricAggregateRequest_Aggregation_AggregationType {
	if x != nil {
		return x.AggregationType
	}
	return GetMetricAggregateRequest_Aggregation_SUM
}

func (x *GetMetricAggregateRequest_Aggregation) GetAggregatedFields() []string {
	if x != nil {
		return x.AggregatedFields
	}
	return nil
}

func (x *GetMetricAggregateRequest_Aggregation) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

type Frame_Field struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FieldType Frame_Field_FieldType `protobuf:"varint,2,opt,name=fieldType,proto3,enum=Cmf.DataManager.Frame_Field_FieldType" json:"fieldType,omitempty"`
	Values    []string              `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *Frame_Field) Reset() {
	*x = Frame_Field{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DataManager_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Frame_Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Frame_Field) ProtoMessage() {}

func (x *Frame_Field) ProtoReflect() protoreflect.Message {
	mi := &file_DataManager_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Frame_Field.ProtoReflect.Descriptor instead.
func (*Frame_Field) Descriptor() ([]byte, []int) {
	return file_DataManager_proto_rawDescGZIP(), []int{18, 0}
}

func (x *Frame_Field) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Frame_Field) GetFieldType() Frame_Field_FieldType {
	if x != nil {
		return x.FieldType
	}
	return Frame_Field_BOOLEAN
}

func (x *Frame_Field) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

var File_DataManager_proto protoreflect.FileDescriptor

var file_DataManager_proto_rawDesc = []byte{
	0x0a, 0x11, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x43, 0x6d, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x15, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xa2, 0x01, 0x0a,
	0x14, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x43, 0x6d, 0x66, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73,
	0x1a, 0x3f, 0x0a, 0x07, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x2e, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x22, 0x9c, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x07, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x43, 0x6d, 0x66,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x1a, 0x3e, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x34, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x22, 0xbf, 0x01, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x0e, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x43,
	0x6d, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x0d, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x4b, 0x65, 0x79, 0x73, 0x1a, 0x42, 0x0a, 0x0c, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x73, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0xcf, 0x01,
	0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a,
	0x10, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x43, 0x6d, 0x66, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69,
	0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x0f, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x48, 0x0a, 0x0e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x76, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x6d, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0d, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0xc3, 0x01, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x10, 0x64, 0x69, 0x6d, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x43, 0x6d, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x0f, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x1a, 0x3a, 0x0a, 0x0e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0xdb, 0x02,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x3a, 0x0a,
	0x0a, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x43, 0x6d, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x64,
	0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x61, 0x78, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x6d, 0x61, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x41, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x43, 0x6d, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0c, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x4a, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x43, 0x6d, 0x66, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52,
	0x06, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x22, 0xca, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x43, 0x6d, 0x66, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x44, 0x69, 0x6d, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x41, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x43, 0x6d, 0x66, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x22, 0x48, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e,
	0x0a, 0x06, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x43, 0x6d, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x06, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x22, 0xf7,
	0x05, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x41, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x12, 0x3a, 0x0a, 0x0a, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x43, 0x6d, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x39, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x33, 0x0a, 0x08, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x43, 0x6d, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79,
	0x12, 0x5a, 0x0a, 0x0c, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x43, 0x6d, 0x66, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c,
	0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x41, 0x0a, 0x0d,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x43, 0x6d, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x1a,
	0x86, 0x02, 0x0a, 0x0b, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x71, 0x0a, 0x10, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x46, 0x2e, 0x43, 0x6d, 0x66, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x61,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x6c, 0x69, 0x61, 0x73, 0x22, 0x41, 0x0a, 0x0f, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x55, 0x4d, 0x10,
	0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x56, 0x47, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x52, 0x41,
	0x54, 0x49, 0x4f, 0x5f, 0x4f, 0x46, 0x5f, 0x53, 0x55, 0x4d, 0x53, 0x10, 0x02, 0x12, 0x09, 0x0a,
	0x05, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x03, 0x22, 0x4c, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x43, 0x6d, 0x66, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x06,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x22, 0xbb, 0x02, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x43, 0x6d, 0x66, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x44, 0x69, 0x6d, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x33, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x43, 0x6d, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x52, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x41, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x43,
	0x6d, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x44,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x8f, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2e, 0x0a, 0x06, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x43, 0x6d, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x06, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x12,
	0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61,
	0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xd0, 0x02, 0x0a, 0x05, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x12, 0x34, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x43, 0x6d, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x73, 0x1a, 0xd4, 0x01, 0x0a, 0x05, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x44, 0x0a, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x43, 0x6d, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x59,
	0x0a, 0x09, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x42,
	0x4f, 0x4f, 0x4c, 0x45, 0x41, 0x4e, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x45, 0x4f, 0x10,
	0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x02, 0x12, 0x09, 0x0a,
	0x05, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52, 0x49,
	0x4e, 0x47, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x05, 0x12, 0x09,
	0x0a, 0x05, 0x54, 0x52, 0x41, 0x43, 0x45, 0x10, 0x06, 0x22, 0x4f, 0x0a, 0x09, 0x44, 0x69, 0x6d,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x39, 0x0a, 0x0b, 0x44, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x4a, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x43, 0x6d,
	0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x79, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0x26, 0x0a, 0x11, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x45, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53, 0x43, 0x10,
	0x00, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43, 0x10, 0x01, 0x32, 0xcf, 0x07, 0x0a, 0x13,
	0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x12, 0x5d, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x73, 0x12, 0x24, 0x2e, 0x43, 0x6d, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x43, 0x6d, 0x66, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x12, 0x23, 0x2e, 0x43, 0x6d, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x43, 0x6d, 0x66, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6c,
	0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x4b,
	0x65, 0x79, 0x73, 0x12, 0x29, 0x2e, 0x43, 0x6d, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a,
	0x2e, 0x43, 0x6d, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65,
	0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x72, 0x0a, 0x13,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x12, 0x2b, 0x2e, 0x43, 0x6d, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2c, 0x2e, 0x43, 0x6d, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x75, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x2c, 0x2e, 0x43, 0x6d, 0x66, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x43, 0x6d, 0x66, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x6d,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x28, 0x2e, 0x43, 0x6d,
	0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x43, 0x6d, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x63, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x26, 0x2e, 0x43, 0x6d, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x43,
	0x6d, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x2e,
	0x43, 0x6d, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x43, 0x6d, 0x66, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x26, 0x2e, 0x43, 0x6d, 0x66,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x27, 0x2e, 0x43, 0x6d, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x29, 0x5a,
	0x27, 0x2e, 0x2f, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x6d, 0x61, 0x6e, 0x75, 0x66,
	0x61, 0x63, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_DataManager_proto_rawDescOnce sync.Once
	file_DataManager_proto_rawDescData = file_DataManager_proto_rawDesc
)

func file_DataManager_proto_rawDescGZIP() []byte {
	file_DataManager_proto_rawDescOnce.Do(func() {
		file_DataManager_proto_rawDescData = protoimpl.X.CompressGZIP(file_DataManager_proto_rawDescData)
	})
	return file_DataManager_proto_rawDescData
}

var file_DataManager_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_DataManager_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_DataManager_proto_goTypes = []interface{}{
	(GetMetricAggregateRequest_Aggregation_AggregationType)(0), // 0: Cmf.DataManager.GetMetricAggregateRequest.Aggregation.AggregationType
	(Frame_Field_FieldType)(0),                                 // 1: Cmf.DataManager.Frame.Field.FieldType
	(OrderBy_OrderByExpression)(0),                             // 2: Cmf.DataManager.OrderBy.OrderByExpression
	(*ListDatasetsRequest)(nil),                                // 3: Cmf.DataManager.ListDatasetsRequest
	(*ListDatasetsResponse)(nil),                               // 4: Cmf.DataManager.ListDatasetsResponse
	(*ListMetricsRequest)(nil),                                 // 5: Cmf.DataManager.ListMetricsRequest
	(*ListMetricsResponse)(nil),                                // 6: Cmf.DataManager.ListMetricsResponse
	(*ListDimensionKeysRequest)(nil),                           // 7: Cmf.DataManager.ListDimensionKeysRequest
	(*ListDimensionKeysResponse)(nil),                          // 8: Cmf.DataManager.ListDimensionKeysResponse
	(*ListDimensionValuesRequest)(nil),                         // 9: Cmf.DataManager.ListDimensionValuesRequest
	(*ListDimensionValuesResponse)(nil),                        // 10: Cmf.DataManager.ListDimensionValuesResponse
	(*ListDimensionsValuesRequest)(nil),                        // 11: Cmf.DataManager.ListDimensionsValuesRequest
	(*ListDimensionsValuesResponse)(nil),                       // 12: Cmf.DataManager.ListDimensionsValuesResponse
	(*GetMetricHistoryRequest)(nil),                            // 13: Cmf.DataManager.GetMetricHistoryRequest
	(*GetMetricHistoryResponse)(nil),                           // 14: Cmf.DataManager.GetMetricHistoryResponse
	(*GetMetricValueRequest)(nil),                              // 15: Cmf.DataManager.GetMetricValueRequest
	(*GetMetricValueResponse)(nil),                             // 16: Cmf.DataManager.GetMetricValueResponse
	(*GetMetricAggregateRequest)(nil),                          // 17: Cmf.DataManager.GetMetricAggregateRequest
	(*GetMetricAggregateResponse)(nil),                         // 18: Cmf.DataManager.GetMetricAggregateResponse
	(*GetMetricTableRequest)(nil),                              // 19: Cmf.DataManager.GetMetricTableRequest
	(*GetMetricTableResponse)(nil),                             // 20: Cmf.DataManager.GetMetricTableResponse
	(*Frame)(nil),                                              // 21: Cmf.DataManager.Frame
	(*Dimension)(nil),                                          // 22: Cmf.DataManager.Dimension
	(*DisplayName)(nil),                                        // 23: Cmf.DataManager.DisplayName
	(*OrderBy)(nil),                                            // 24: Cmf.DataManager.OrderBy
	(*ListDatasetsResponse_Dataset)(nil),                       // 25: Cmf.DataManager.ListDatasetsResponse.Dataset
	(*ListMetricsResponse_Metric)(nil),                         // 26: Cmf.DataManager.ListMetricsResponse.Metric
	(*ListDimensionKeysResponse_DimensionKey)(nil),             // 27: Cmf.DataManager.ListDimensionKeysResponse.DimensionKey
	(*ListDimensionValuesResponse_DimensionValue)(nil),         // 28: Cmf.DataManager.ListDimensionValuesResponse.DimensionValue
	(*ListDimensionsValuesResponse_DimensionValue)(nil),        // 29: Cmf.DataManager.ListDimensionsValuesResponse.DimensionValue
	(*GetMetricAggregateRequest_Aggregation)(nil),              // 30: Cmf.DataManager.GetMetricAggregateRequest.Aggregation
	(*Frame_Field)(nil),                                        // 31: Cmf.DataManager.Frame.Field
	(*timestamppb.Timestamp)(nil),                              // 32: google.protobuf.Timestamp
}
var file_DataManager_proto_depIdxs = []int32{
	25, // 0: Cmf.DataManager.ListDatasetsResponse.datasets:type_name -> Cmf.DataManager.ListDatasetsResponse.Dataset
	26, // 1: Cmf.DataManager.ListMetricsResponse.metrics:type_name -> Cmf.DataManager.ListMetricsResponse.Metric
	27, // 2: Cmf.DataManager.ListDimensionKeysResponse.dimension_keys:type_name -> Cmf.DataManager.ListDimensionKeysResponse.DimensionKey
	28, // 3: Cmf.DataManager.ListDimensionValuesResponse.dimension_values:type_name -> Cmf.DataManager.ListDimensionValuesResponse.DimensionValue
	29, // 4: Cmf.DataManager.ListDimensionsValuesResponse.dimension_values:type_name -> Cmf.DataManager.ListDimensionsValuesResponse.DimensionValue
	22, // 5: Cmf.DataManager.GetMetricHistoryRequest.dimensions:type_name -> Cmf.DataManager.Dimension
	32, // 6: Cmf.DataManager.GetMetricHistoryRequest.start_date:type_name -> google.protobuf.Timestamp
	32, // 7: Cmf.DataManager.GetMetricHistoryRequest.end_date:type_name -> google.protobuf.Timestamp
	23, // 8: Cmf.DataManager.GetMetricHistoryRequest.display_names:type_name -> Cmf.DataManager.DisplayName
	21, // 9: Cmf.DataManager.GetMetricHistoryResponse.frames:type_name -> Cmf.DataManager.Frame
	22, // 10: Cmf.DataManager.GetMetricValueRequest.dimensions:type_name -> Cmf.DataManager.Dimension
	23, // 11: Cmf.DataManager.GetMetricValueRequest.display_names:type_name -> Cmf.DataManager.DisplayName
	21, // 12: Cmf.DataManager.GetMetricValueResponse.frames:type_name -> Cmf.DataManager.Frame
	22, // 13: Cmf.DataManager.GetMetricAggregateRequest.dimensions:type_name -> Cmf.DataManager.Dimension
	32, // 14: Cmf.DataManager.GetMetricAggregateRequest.start_date:type_name -> google.protobuf.Timestamp
	32, // 15: Cmf.DataManager.GetMetricAggregateRequest.end_date:type_name -> google.protobuf.Timestamp
	24, // 16: Cmf.DataManager.GetMetricAggregateRequest.order_by:type_name -> Cmf.DataManager.OrderBy
	30, // 17: Cmf.DataManager.GetMetricAggregateRequest.aggregations:type_name -> Cmf.DataManager.GetMetricAggregateRequest.Aggregation
	23, // 18: Cmf.DataManager.GetMetricAggregateRequest.display_names:type_name -> Cmf.DataManager.DisplayName
	21, // 19: Cmf.DataManager.GetMetricAggregateResponse.frames:type_name -> Cmf.DataManager.Frame
	22, // 20: Cmf.DataManager.GetMetricTableRequest.dimensions:type_name -> Cmf.DataManager.Dimension
	24, // 21: Cmf.DataManager.GetMetricTableRequest.order_by:type_name -> Cmf.DataManager.OrderBy
	23, // 22: Cmf.DataManager.GetMetricTableRequest.display_names:type_name -> Cmf.DataManager.DisplayName
	21, // 23: Cmf.DataManager.GetMetricTableResponse.frames:type_name -> Cmf.DataManager.Frame
	31, // 24: Cmf.DataManager.Frame.fields:type_name -> Cmf.DataManager.Frame.Field
	32, // 25: Cmf.DataManager.Frame.timestamps:type_name -> google.protobuf.Timestamp
	2,  // 26: Cmf.DataManager.OrderBy.expression:type_name -> Cmf.DataManager.OrderBy.OrderByExpression
	0,  // 27: Cmf.DataManager.GetMetricAggregateRequest.Aggregation.aggregation_type:type_name -> Cmf.DataManager.GetMetricAggregateRequest.Aggregation.AggregationType
	1,  // 28: Cmf.DataManager.Frame.Field.fieldType:type_name -> Cmf.DataManager.Frame.Field.FieldType
	3,  // 29: Cmf.DataManager.DataManagerServices.ListDatasets:input_type -> Cmf.DataManager.ListDatasetsRequest
	5,  // 30: Cmf.DataManager.DataManagerServices.ListMetrics:input_type -> Cmf.DataManager.ListMetricsRequest
	7,  // 31: Cmf.DataManager.DataManagerServices.ListDimensionKeys:input_type -> Cmf.DataManager.ListDimensionKeysRequest
	9,  // 32: Cmf.DataManager.DataManagerServices.ListDimensionValues:input_type -> Cmf.DataManager.ListDimensionValuesRequest
	11, // 33: Cmf.DataManager.DataManagerServices.ListDimensionsValues:input_type -> Cmf.DataManager.ListDimensionsValuesRequest
	13, // 34: Cmf.DataManager.DataManagerServices.GetMetricHistory:input_type -> Cmf.DataManager.GetMetricHistoryRequest
	15, // 35: Cmf.DataManager.DataManagerServices.GetMetricValue:input_type -> Cmf.DataManager.GetMetricValueRequest
	17, // 36: Cmf.DataManager.DataManagerServices.GetMetricAggregate:input_type -> Cmf.DataManager.GetMetricAggregateRequest
	19, // 37: Cmf.DataManager.DataManagerServices.GetMetricTable:input_type -> Cmf.DataManager.GetMetricTableRequest
	4,  // 38: Cmf.DataManager.DataManagerServices.ListDatasets:output_type -> Cmf.DataManager.ListDatasetsResponse
	6,  // 39: Cmf.DataManager.DataManagerServices.ListMetrics:output_type -> Cmf.DataManager.ListMetricsResponse
	8,  // 40: Cmf.DataManager.DataManagerServices.ListDimensionKeys:output_type -> Cmf.DataManager.ListDimensionKeysResponse
	10, // 41: Cmf.DataManager.DataManagerServices.ListDimensionValues:output_type -> Cmf.DataManager.ListDimensionValuesResponse
	12, // 42: Cmf.DataManager.DataManagerServices.ListDimensionsValues:output_type -> Cmf.DataManager.ListDimensionsValuesResponse
	14, // 43: Cmf.DataManager.DataManagerServices.GetMetricHistory:output_type -> Cmf.DataManager.GetMetricHistoryResponse
	16, // 44: Cmf.DataManager.DataManagerServices.GetMetricValue:output_type -> Cmf.DataManager.GetMetricValueResponse
	18, // 45: Cmf.DataManager.DataManagerServices.GetMetricAggregate:output_type -> Cmf.DataManager.GetMetricAggregateResponse
	20, // 46: Cmf.DataManager.DataManagerServices.GetMetricTable:output_type -> Cmf.DataManager.GetMetricTableResponse
	38, // [38:47] is the sub-list for method output_type
	29, // [29:38] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_DataManager_proto_init() }
func file_DataManager_proto_init() {
	if File_DataManager_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_DataManager_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDatasetsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DataManager_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDatasetsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DataManager_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DataManager_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMetricsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DataManager_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDimensionKeysRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DataManager_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDimensionKeysResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DataManager_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDimensionValuesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DataManager_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDimensionValuesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DataManager_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDimensionsValuesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DataManager_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDimensionsValuesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DataManager_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMetricHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DataManager_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMetricHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DataManager_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMetricValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DataManager_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMetricValueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DataManager_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMetricAggregateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DataManager_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMetricAggregateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DataManager_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMetricTableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DataManager_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMetricTableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DataManager_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Frame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DataManager_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dimension); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DataManager_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisplayName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DataManager_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderBy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DataManager_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDatasetsResponse_Dataset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DataManager_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMetricsResponse_Metric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DataManager_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDimensionKeysResponse_DimensionKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DataManager_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDimensionValuesResponse_DimensionValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DataManager_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDimensionsValuesResponse_DimensionValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DataManager_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMetricAggregateRequest_Aggregation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DataManager_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Frame_Field); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_DataManager_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_DataManager_proto_goTypes,
		DependencyIndexes: file_DataManager_proto_depIdxs,
		EnumInfos:         file_DataManager_proto_enumTypes,
		MessageInfos:      file_DataManager_proto_msgTypes,
	}.Build()
	File_DataManager_proto = out.File
	file_DataManager_proto_rawDesc = nil
	file_DataManager_proto_goTypes = nil
	file_DataManager_proto_depIdxs = nil
}
